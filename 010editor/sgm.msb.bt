//--------------------------------------
// Skullgirls level, model file
//
// File: Skullgirls Model files (.sgm.msb)
// Author: 0xFAIL
// Revision: 1.0
// Comment: Array optimisation is broken? has to be disabled when using Pascal64String arrays
// Note: uchar4 is rgba
//--------------------------------------
BigEndian();

typedef struct{
    uint64 count <hidden=true,fgcolor=cLtGray, bgcolor=cWhite>;
    char chars[count] <hidden=true, optimize=false>;
} Pascal64String <read=Pascal64String_Read>;

string Pascal64String_Read(Pascal64String &v){ return v.chars; }

struct FILE{
    Pascal64String file_format_revision <bgcolor=cBlue,fgcolor=cWhite>;
    Pascal64String textureName <bgcolor=cYellow>;
    float unknown1[13] <fgcolor=cLtGray>;
    Pascal64String dataFormat <bgcolor=cYellow>;
    uint64 dataFormatLengthPerPolygon <fgcolor=cGreen>;
    uint64 nOfVertices <fgcolor=cGreen>;
    uint64 nOfTriangles <fgcolor=cGreen>;
    uint64 nOfBones <fgcolor=cLtGreen>;
    
    struct VERTEX{
        float position[3] <bgcolor=cRed>;
        float normals[3] <bgcolor=cGreen>;
        float uv[2] <bgcolor=cBlue>;
        ubyte rgba[4] <bgcolor=cYellow>;
        if(dataFormatLengthPerPolygon == 44){
            // Joint ids
            ubyte joint_id[4] <bgcolor=cLtGray>;
            ubyte joint_weights[4] <bgcolor=cGray>;
        }
    }vertices[nOfVertices];

    struct TRIANGLE{
        short indices[3] <fgcolor=cLtRed>;
    }triangle[nOfTriangles];
    struct BOUNDINGBOX{
        float posMin[3] <bgcolor=cLtGray,fgcolor=cLtRed>;
        float posMax[3] <bgcolor=cLtGray,fgcolor=cLtGreen>;
    }bounding_box;
    struct BONE_NAMES{
        Pascal64String boneName[nOfBones] <bgcolor=cYellow, optimize=false>;
    }bone_name;
    struct BONE_MATRICES{
        float boneMat[16] <fgcolor=cGray>;
    }bone_matrices[nOfBones];
}file <read=FILE_read>;

//http://www.intrepid-web.net/010-editor/
char[] get_filename(char full_path[], char delimiter[])
{
    
    int     i;
    int     length, deli_len, del_index;
    char    file_name[];

    deli_len = Strlen(delimiter);

    length = Strlen(full_path);
    file_name = full_path;
    i=0;
    while(Strstr(file_name, delimiter) > -1)
    {
        del_index = Strstr(file_name, delimiter);
        file_name = SubStr(file_name, del_index+deli_len, -1);
    }
    
    return file_name;
}

string FILE_read(FILE &f){
    return get_filename(GetFileName(),"\\");
}